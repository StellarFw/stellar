name: Test
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: node
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - run: pnpm lint

  test:
    runs-on: ubuntu-latest
    container:
      image: node

    services:
      redis:
        image: redis

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install
      - run: pnpm test
        env:
          REDIS_HOST: redis
          maxMemoryAlloted: 10000

  # build:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: node
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Node.js 14.x
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 14.x
  #     - run: npm ci
  #     - run: npm run build
  #     - name: save cache
  #       uses: actions/cache@v2
  #       with:
  #         path: |
  #           node_modules
  #           dist
  #         key: ${{ runner.os }}-cache-${{ github.sha }}

  complete:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - run: echo "Done! ðŸ™Œ"
