#!/usr/bin/env node
'use strict'

// import the package manifest
const pkg = require('../package.json')

// config the command line appearance
require('yargonaut')
  .errorsStyle('red.bold')
  .helpStyle('yellow')
  .style('blue', 'choices')

// load Yargs
const yargs = require('yargs')

function checkCommands (yargs, argv, numRequired) {
  if (argv._.length < numRequired) {
    yargs.showHelp()
  } else {
    // check for unknown command
  }
}

// --- define some global configurations ---------------------------------------

// show a welcome message
console.log(`\x1b[34m> Stellar Framework \x1b[37mversion \x1b[33m${pkg.version}\x1b[39m\n`)

// set usage
yargs.usage('Usage: stellar <command> [--options]')

// enable help
yargs.help()
yargs.alias('h', 'help')

// show help menu when the command fails
yargs.showHelpOnFail(true)

// disable wrap
yargs.wrap(null)

// enable recommended commands
yargs.recommendCommands()

// enable completion
yargs.completion()

// --- register options --------------------------------------------------------

yargs.option('daemon', {
  describe: 'Execute the command as a daemon',
  type: 'boolean'
})

// --- register commands -------------------------------------------------------

yargs.command(require('./commands/dockerIt.js'))
yargs.command(require('./commands/init.js'))
yargs.command('make', 'Generate some project components', yargs => {
  // register the inner commands
  yargs.command(require('./commands/makeAction'))
  yargs.command(require('./commands/makeListener'))
  yargs.command(require('./commands/makeModel'))
  yargs.command(require('./commands/makeTask'))

  // execute the yargs
  const argv = yargs.argv

  // check if we have at least 2 arguments
  checkCommands(yargs, argv, 2)
})
yargs.command(require('./commands/run.js'))
yargs.command(require('./commands/test.js'))

// execute yargs
const argv = yargs.argv

// check if the there is at least one command, otherwise show the menu
checkCommands(yargs, argv, 1)
