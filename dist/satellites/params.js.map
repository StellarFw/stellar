{"version":3,"sources":["satellites/params.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;IAKM,M;;;;;;;;;;;;;;;AA0BJ,kBAAa,GAAb,EAAkB;AAAA;;AAAA,SAnBlB,GAmBkB,GAnBZ,IAmBY;AAAA,SAZlB,gBAYkB,GAZC,CAAE,MAAF,EAAU,YAAV,EAAwB,UAAxB,EAAoC,QAApC,CAYD;AAAE,SAAK,GAAL,GAAW,GAAX;AAAgB;;;;;;;;;;;;;;;;;;;;;;;yCAOd;AACpB,UAAI,OAAO,IAAX;;AAEA,UAAI,UAAJ;AAAA,UAAO,UAAP;AACA,UAAI,gBAAgB,EAApB;;;AAGA,WAAK,gBAAL,CAAsB,OAAtB,CAA8B;AAAA,eAAK,cAAc,IAAd,CAAmB,CAAnB,CAAL;AAAA,OAA9B;;;AAGA,WAAK,CAAL,IAAU,KAAK,GAAL,CAAS,OAAT,CAAiB,OAA3B,EAAoC;;AAElC,aAAK,CAAL,IAAU,KAAK,GAAL,CAAS,OAAT,CAAiB,OAAjB,CAA0B,CAA1B,CAAV,EAAyC;;AAEvC,cAAI,SAAS,KAAK,GAAL,CAAS,OAAT,CAAiB,OAAjB,CAA0B,CAA1B,EAA+B,CAA/B,CAAb;;;AAGA,eAAK,IAAI,GAAT,IAAgB,OAAO,MAAvB,EAA+B;AAAE,0BAAc,IAAd,CAAmB,GAAnB;AAAyB;AAC3D;AACF;;;AAGD,WAAK,aAAL,GAAqB,gBAAM,cAAN,CAAqB,aAArB,CAArB;;AAEA,aAAO,KAAK,aAAZ;AACD;;;;;;;;;;SAUD,Y,GAAe,G;;;;;;;;;;;;;;;;;;;;yBAQT,G,EAAK,I,EAAM;;AAEf,UAAI,MAAJ,GAAa,IAAI,MAAJ,CAAW,GAAX,CAAb;;;AAGA,UAAI,MAAJ,CAAW,kBAAX;;;AAGA;AACD","file":"satellites/params.js","sourcesContent":["import Utils from '../utils';\n\n/**\n * Manage the application secure params.\n */\nclass Params {\n\n  /**\n   * API reference object\n   *\n   * @type {null}\n   */\n  api = null\n\n  /**\n   * Special params we will always accept.\n   *\n   * @type {string[]}\n   */\n  globalSafeParams = [ 'file', 'apiVersion', 'callback', 'action' ]\n\n  /**\n   * List with all save params.\n   */\n  postVariables\n\n  /**\n   * Create a new instance of this class.\n   *\n   * @param api API reference.\n   */\n  constructor (api) { this.api = api }\n\n  /**\n   * Build the hash map with all safe application params.\n   *\n   * @returns {*}\n   */\n  buildPostVariables () {\n    let self = this\n\n    let i, j\n    let postVariables = []\n\n    // push the global safe params for the 'postVariables'\n    self.globalSafeParams.forEach(p => postVariables.push(p))\n\n    // iterate all actions files\n    for (i in self.api.actions.actions) {\n      // iterate all actions definitions\n      for (j in self.api.actions.actions[ i ]) {\n        // get current action\n        let action = self.api.actions.actions[ i ][ j ]\n\n        // iterate all inputs keys and add it to postVariables\n        for (let key in action.inputs) { postVariables.push(key) }\n      }\n    }\n\n    // remove the duplicated entries\n    self.postVariables = Utils.arrayUniqueify(postVariables)\n\n    return self.postVariables\n  }\n}\n\nexport default class {\n\n  /**\n   * Initializer load priority.\n   *\n   * @type {number}\n   */\n  loadPriority = 420\n\n  /**\n   * Action to the executed on the initializer loading.\n   *\n   * @param api   Api reference.\n   * @param next  Callback function.\n   */\n  load (api, next) {\n    // put the params API available to all platform\n    api.params = new Params(api)\n\n    // build the post variables\n    api.params.buildPostVariables()\n\n    // finish the initializer execution\n    next()\n  }\n\n}\n"],"sourceRoot":"/source/"}