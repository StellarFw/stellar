{"version":3,"sources":["utils.js"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["import os from 'os';\nimport fs from 'fs';\nimport path from 'path';\n\nexport default class Utils {\n\n  /**\n   * Read all files from the given directory.\n   *\n   * @param dir         Folder path to search.\n   * @returns {Array}   Array with the files paths.\n   */\n  static getFiles (dir) {\n    var results = [];\n\n    fs.readdirSync(dir).forEach(function (file) {\n      file = `${dir}/${file}`;\n      var stat = fs.statSync(file);\n\n      if (stat && !stat.isDirectory()) {\n        results.push(file);\n      }\n    });\n\n    return results;\n  }\n\n  /**\n   * Get all .js files in a directory.\n   *\n   * @param dir\n   * @param extension\n   * @returns {Array.<T>}\n   */\n  static recursiveDirectoryGlob (dir, extension) {\n    var results = [];\n\n    if (!extension) {\n      extension = 'js';\n    }\n    extension = extension.replace('.', '');\n    if (dir[ dir.length - 1 ] !== '/') {\n      dir += '/'\n    }\n\n    if (fs.existsSync(dir)) {\n      fs.readdirSync(dir).forEach(function (file) {\n        var fullFilePath = path.normalize(dir + file);\n        if (file[ 0 ] !== '.') { // ignore 'system' files\n          var stats = fs.statSync(fullFilePath);\n          var child;\n          if (stats.isDirectory()) {\n            child = Utils.recursiveDirectoryGlob(fullFilePath, extension);\n            child.forEach(function (c) {\n              results.push(c);\n            })\n          } else if (stats.isSymbolicLink()) {\n            var realPath = fs.readlinkSync(fullFilePath);\n            child = Utils.recursiveDirectoryGlob(realPath);\n            child.forEach(function (c) {\n              results.push(c);\n            })\n          } else if (stats.isFile()) {\n            var fileParts = file.split('.');\n            var ext = fileParts[ (fileParts.length - 1) ];\n            if (ext === extension) {\n              results.push(fullFilePath);\n            }\n          }\n        }\n      });\n    }\n\n    return results.sort();\n  }\n\n  /**\n   * Merge two hashes recursively.\n   *\n   * @param a\n   * @param b\n   * @param arg\n   * @returns {{}}\n   */\n  static hashMerge (a, b, arg) {\n    let c = {};\n    let i, response;\n\n    for (i in a) {\n      if (Utils.isPlainObject(a[ i ]) && Object.keys(a[ i ]).length > 0) {\n        c[ i ] = Utils.hashMerge(c[ i ], a[ i ], arg);\n      } else {\n        if (typeof a[ i ] === 'function') {\n          response = a[ i ](arg);\n          if (Utils.isPlainObject(response)) {\n            c[ i ] = Utils.hashMerge(c[ i ], response, arg);\n          } else {\n            c[ i ] = response;\n          }\n        } else {\n          c[ i ] = a[ i ];\n        }\n      }\n    }\n    for (i in b) {\n      if (Utils.isPlainObject(b[ i ]) && Object.keys(b[ i ]).length > 0) {\n        c[ i ] = Utils.hashMerge(c[ i ], b[ i ], arg);\n      } else {\n        if (typeof b[ i ] === 'function') {\n          response = b[ i ](arg);\n          if (Utils.isPlainObject(response)) {\n            c[ i ] = Utils.hashMerge(c[ i ], response, arg);\n          } else {\n            c[ i ] = response;\n          }\n        } else {\n          c[ i ] = b[ i ];\n        }\n      }\n    }\n    return c;\n  }\n\n  /**\n   * Check if the passed argument is a plain object.\n   *\n   * @param o\n   * @returns {boolean}\n   */\n  static isPlainObject (o) {\n    var safeTypes = [ Boolean, Number, String, Function, Array, Date, RegExp, Buffer ];\n    var safeInstances = [ 'boolean', 'number', 'string', 'function' ];\n    var expandPreventMatchKey = '_toExpand'; // set `_toExpand = false` within an object if you don't want to expand it\n    var i;\n\n    if (!o) {\n      return false\n    }\n    if ((o instanceof Object) === false) {\n      return false\n    }\n    for (i in safeTypes) {\n      if (o instanceof safeTypes[ i ]) {\n        return false\n      }\n    }\n    for (i in safeInstances) {\n      if (typeof o === safeInstances[ i ]) {\n        return false\n      }\n    }\n    if (o[ expandPreventMatchKey ] === false) {\n      return false\n    }\n    return (o.toString() === '[object Object]');\n  }\n\n  /**\n   * Cookie parse from headers of http(s) requests.\n   *\n   * @param req\n   * @returns {{}}\n   */\n  static parseCookies (req) {\n    var cookies = {};\n    if (req.headers.cookie) {\n      req.headers.cookie.split(';').forEach(function (cookie) {\n        var parts = cookie.split('=');\n        cookies[ parts[ 0 ].trim() ] = ( parts[ 1 ] || '' ).trim();\n      });\n    }\n    return cookies;\n  }\n\n  /**\n   * Collapse this object to an array.\n   *\n   * @param obj\n   * @returns {*}\n   */\n  static collapseObjectToArray (obj) {\n    try {\n      let keys = Object.keys(obj);\n      if (keys.length < 1) {\n        return false\n      }\n      if (keys[ 0 ] !== '0') {\n        return false\n      }\n      if (keys[ (keys.length - 1) ] !== String(keys.length - 1)) {\n        return false\n      }\n\n      let arr = [];\n      for (let i in keys) {\n        let key = keys[ i ];\n        if (String(parseInt(key)) !== key) {\n          return false\n        }\n        else {\n          arr.push(obj[ key ]);\n        }\n      }\n\n      return arr;\n    } catch (e) {\n      return false\n    }\n  }\n\n  /**\n   * Unique-ify an array.\n   *\n   * @param array Array to be uniquefied.\n   * @returns {Array} New array.\n   */\n  static arrayUniqueify (array) {\n    array.filter((value, index, self) => {\n      return self.indexOf(value) === index;\n    });\n\n    return array;\n  }\n\n  static isObject (arg) {\n    return typeof arg === 'object' && arg !== null;\n  }\n\n  static objectToString (o) {\n    return Object.prototype.toString.call(o);\n  }\n\n  static isError (e) {\n    return Utils.isObject(e) && (Utils.objectToString(e) === '[object Error]' || e instanceof Error);\n  }\n\n  /**\n   * Remove a directory.\n   *\n   * @param dir   Directory path.\n   */\n  static removeDirectory (dir) {\n    let filesList;\n\n    // get directory files\n    try {\n      filesList = fs.readdirSync(dir);\n    } catch (e) {\n      return;\n    }\n\n    // iterate all folders and files on the directory\n    filesList.forEach((file) => {\n      // get full file path\n      let filePath = `${dir}/${file}`;\n\n      // check if it's a file\n      if (fs.statSync(filePath).isFile()) {\n        fs.unlinkSync(filePath);\n      } else {\n        Utils.removeDirectory(filePath);\n      }\n    });\n\n    // remove current directory\n    fs.rmdirSync(dir);\n  }\n\n  /**\n   * Check if the directory exists.\n   *\n   * @param dir           Directory path.\n   * @returns {boolean}   True if exists, false if not or the given path isn't a directory.\n   */\n  static directoryExists (dir) {\n    try {\n      fs.statSync(dir).isDirectory()\n    } catch (er) {\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * Check if a file exists.\n   *\n   * @param path          Path to check.\n   * @returns {boolean}   True if the file exists, false otherwise.\n   */\n  static fileExists (path) {\n    try {\n      fs.statSync(path).isFile()\n    } catch (error) {\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * Create a new directory.\n   *\n   * @param path Path there the directory must be created.\n   */\n  static createFolder (path) {\n    try {\n      fs.mkdirSync(path)\n    } catch (e) {\n      if (e.code != 'EEXIST') { throw e }\n    }\n  }\n\n  /**\n   * Copy a file.\n   *\n   * This only work with files.\n   *\n   * @param source        Source path.\n   * @param destination   Destination path.\n   */\n  static copyFile (source, destination) {\n    fs.createReadStream(source).pipe(fs.createWriteStream(destination))\n  }\n\n  /**\n   * Get this servers external interface.\n   *\n   * @returns {String} Server external IP or false if not founded.\n   */\n  static getExternalIPAddress () {\n    let ifaces = os.networkInterfaces();\n    let ip = false;\n\n    for (var dev in ifaces) {\n      ifaces[ dev ].forEach((details) => {\n        if (details.family === 'IPv4' && details.address !== '127.0.0.1') {\n          ip = details.address;\n        }\n      });\n    }\n\n    return ip;\n  }\n\n  /**\n   * Make a clone of an object.\n   *\n   * @param obj         Object to be cloned.\n   * @returns {Object}  New object reference.\n   */\n  static objClone (obj) {\n    return Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyNames(obj).reduce((memo, name) => {\n      return (memo[ name ] = Object.getOwnPropertyDescriptor(obj, name)) && memo;\n    }, {}));\n  }\n\n  static stringToHash (api, path, object) {\n    if (!object) { object = api }\n    function _index (obj, i) { return obj[ i ] }\n\n    return path.split('.').reduce(_index, object)\n  }\n\n  /**\n   * Parse an IPv6 address.\n   *\n   * @param address   Address to be parsed.\n   * @returns {{host: string, port: Number}}\n   */\n  static parseIPv6URI (address) {\n    let host = '::1'\n    let port = 80\n    let regexp = new RegExp(/\\[([0-9a-f:]+)\\]:([0-9]{1,5})/)\n\n    // if we have brackets parse them and find a port\n    if (address.indexOf('[') > -1 && address.indexOf(']') > -1) {\n      // execute the regular expression\n      let res = regexp.exec(address)\n\n      // if null this isn't a valid IPv6 address\n      if (res === null) { throw new Error('failed to parse address') }\n\n      host = res[ 1 ]\n      port = res[ 2 ]\n    } else {\n      host = address\n    }\n\n    return { host: host, port: parseInt(port, 10) }\n  }\n\n}\n"],"sourceRoot":"/source/"}