{"version":3,"sources":["config/servers/web.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;kBAEe;AACb,WAAS;AACP,SAAK,kBAAO;AACV,aAAO;;;;AAIL,gBAAQ,IAJH;;;;;;;;AAYL,gBAAQ,KAZH;;;;;;;;AAoBL,uBAAe,EApBV;;;;;;;;AA4BL,gBAAQ,SA5BH;;;;;;;;AAoCL,cAAM,QAAQ,GAAR,CAAY,IAAZ,IAAoB,IApCrB;;;;;;;AA2CL,qBAAa;AACX,0BAAgB,IAAI,MAAJ,CAAW,OAAX,CAAmB,UADxB;AAEX,yCAA+B,GAFpB;AAGX,0CAAgC,qDAHrB;AAIX,0CAAgC;AAJrB,SA3CR;;;;;;;;AAwDL,2BAAmB,KAxDd;;;;;;;;AAgEL,yBAAiB,QAhEZ;;;;;;;AAuEL,0BAAkB,MAvEb;;;;;;AA6EL,uBAAe,IA7EV;;;;;;;AAoFL,sBAAc,IApFT;;;;;AAyFL,+BAAuB,EAzFlB;;;;;;;;AAiGL,sBAAc,CAjGT;;;;;;AAuGL,4BAAoB;AAClB,qBAAW,WADO;AAElB,uBAAa,IAFK;AAGlB,8BAAoB,KAHF;AAIlB,oBAAU;AACR,kBAAM,GADE;AAER,qBAAS;AAFD;AAJQ,SAvGf;;;;;AAoHL,qBAAa;AACX,qBAAW,aAAG,MAAH,EADA;AAEX,0BAAgB,KAFL;AAGX,yBAAe,OAAO,IAAP,GAAc;AAHlB,SApHR;;;;;;;AA+HL,iBAAS,CA/HJ;;;;;AAoIL,yBAAiB;AACf,6BAAmB,IADJ;AAEf,gCAAsB;AAFP,SApIZ;;;;;;;;;AAgJL,0BAAkB,IAhJb;;;;;;;;;;AA0JL,kBAAU,KA1JL;;;;;;;AAiKL,2BAAmB,EAjKd;;;;;;;;AAyKL,oBAAY;AAzKP,OAAP;AA2KD;AA7KM;AADI,C","file":"config/servers/web.js","sourcesContent":["import os from 'os'\n\nexport default {\n  servers: {\n    web: api => {\n      return {\n        // ---------------------------------------------------------------------\n        // Enable server?\n        // ---------------------------------------------------------------------\n        enable: true,\n\n        // ---------------------------------------------------------------------\n        // HTTPS\n        //\n        // If this property are defined to false we will use a regular HTTP\n        // connection, otherwise we use a secure HTTPS connection.\n        // ---------------------------------------------------------------------\n        secure: false,\n\n        // ---------------------------------------------------------------------\n        // This config map is passed to the https.createServer method.\n        //\n        // This is only used if we are using a secure connection. This should\n        // contains the SSL certificate.\n        // ---------------------------------------------------------------------\n        serverOptions: {},\n\n        // ---------------------------------------------------------------------\n        // This is the IP who will be used to listen the web socket.\n        //\n        // If this property are defined to '0.0.0.0' we listen for all on the\n        // IPv4 and IPv6.\n        // ---------------------------------------------------------------------\n        bindIP: '0.0.0.0',\n\n        // ---------------------------------------------------------------------\n        // Port ot Socket Path.\n        //\n        // This options can be overwrited withe PORT param on the console\n        // execution.\n        // ---------------------------------------------------------------------\n        port: process.env.PORT || 8080,\n\n        // ---------------------------------------------------------------------\n        // This are the headers who are sended on all Stellar responses.\n        //\n        // By default this tells CORS to allow request from any origin.\n        // ---------------------------------------------------------------------\n        httpHeaders: {\n          'X-Powered-By': api.config.general.serverName,\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS, TRACE',\n          'Access-Control-Allow-Headers': 'Content-Type'\n        },\n\n        // ---------------------------------------------------------------------\n        // Define the route that actions will be served from.\n        //\n        // Using a call format like REST is treated as an action call too.\n        // IE: /api?action=generateNumber == /api/generateNumber\n        // ---------------------------------------------------------------------\n        urlPathForActions: 'api',\n\n        // ---------------------------------------------------------------------\n        // Route that static files will be served from.\n        //\n        // path relative to project root to server static content from, set to\n        // `null` to disable the file server entirely.\n        // ---------------------------------------------------------------------\n        urlPathForFiles: 'public',\n\n        // ---------------------------------------------------------------------\n        // When visiting the root URL, should visitors see 'api' or 'file'?\n        //\n        // Visitors can always visit /api and /public as normal.\n        // ---------------------------------------------------------------------\n        rootEndpointType: 'file',\n\n        // ---------------------------------------------------------------------\n        // Simple routing also adds an 'all' route which matches /api/:action\n        // for all actions.\n        // ---------------------------------------------------------------------\n        simpleRouting: true,\n\n        // ---------------------------------------------------------------------\n        // Query Routing allows an action to be defined via a URL param.\n        //\n        // ex: /api?action=:action\n        // ---------------------------------------------------------------------\n        queryRouting: true,\n\n        // ---------------------------------------------------------------------\n        // Header which will be returned for all flat file (defined in seconds)\n        // ---------------------------------------------------------------------\n        flatFileCacheDuration: 60,\n\n        // ---------------------------------------------------------------------\n        // This define the many times the Stellar should try boot the server.\n        //\n        // This might happen if the port is in use by another process or the\n        // socketfile is claimed.\n        // ---------------------------------------------------------------------\n        bootAttempts: 1,\n\n        // ---------------------------------------------------------------------\n        // Settings for determining the id of an http(s) request\n        // (browser-fingerprint)\n        // ---------------------------------------------------------------------\n        fingerprintOptions: {\n          cookieKey: 'sessionID',\n          toSetCookie: true,\n          onlyStaticElements: false,\n          settings: {\n            path: '/',\n            expires: 3600000\n          }\n        },\n\n        // ---------------------------------------------------------------------\n        // Options to be applied to incoming file uploads.\n        // ---------------------------------------------------------------------\n        formOptions: {\n          uploadDir: os.tmpdir(),\n          keepExtensions: false,\n          maxFieldsSize: 1024 * 1024 * 100\n        },\n\n        // ---------------------------------------------------------------------\n        // Enable JSON padding to make more human-readable.\n        //\n        // Set to null to disable.\n        // ---------------------------------------------------------------------\n        padding: 2,\n\n        // ---------------------------------------------------------------------\n        // Options to configure metadata in responses\n        // ---------------------------------------------------------------------\n        metadataOptions: {\n          serverInformation: true,\n          requesterInformation: true\n        },\n\n        // ---------------------------------------------------------------------\n        // When true, will modify the response header if connection.error is not\n        // null.\n        //\n        // Is also possible set connection.rawConnection.responseHttpCode to\n        // specify a code per request.\n        // ---------------------------------------------------------------------\n        returnErrorCodes: true,\n\n        // ---------------------------------------------------------------------\n        // Use GZIP (compression) on the server responses.\n        //\n        // This only works when the client accept them. This also will slow down\n        // the performance of Stellar, and if you need this feature, it is\n        // recommended that you do this upstream with nginx or on a load\n        // balancer.\n        // ---------------------------------------------------------------------\n        compress: false,\n\n        // ---------------------------------------------------------------------\n        // Options to pass to the query parser.\n        //\n        // All options available at https://github.com/hapijs/qs\n        // ---------------------------------------------------------------------\n        queryParseOptions: {},\n\n        // ---------------------------------------------------------------------\n        // ETAG Header\n        //\n        // When true, an ETAG Header will be provided with each requested static\n        // file for caching reasons.\n        // ---------------------------------------------------------------------\n        enableEtag: true\n      }\n    }\n  }\n}\n"],"sourceRoot":"/source/"}