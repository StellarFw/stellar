{"version":3,"sources":["config/servers/tcp.js"],"names":[],"mappings":";;;;;kBAAe;AACb,WAAS;AACP,SAAK,kBAAO;AACV,aAAO;;;;AAIL,gBAAQ,QAAQ,GAAR,CAAY,iBAAZ,KAAkC,SAJrC;;;;;AASL,gBAAQ,KATH;;;;;;;;AAiBL,uBAAe,EAjBV;;;;;AAsBL,cAAM,IAtBD;;;;;;;AA6BL,gBAAQ,SA7BH;;;;;;;AAoCL,sBAAc,KApCT;;;;;AAyCL,mBAAW,IAzCN;;;;;AA8CL,uBAAe,CA9CV;;;;;AAmDL,wBAAgB;AAnDX,OAAP;AAqDD;AAvDM;AADI,C;AA4DR,IAAM,sBAAO;AAClB,WAAS;AACP,SAAK,kBAAO;AACV,aAAO;AACL,iBAAS,IADJ;AAEL,cAAM,IAFD;AAGL,gBAAQ;AAHH,OAAP;AAKD;AAPM;AADS,CAAb","file":"config/servers/tcp.js","sourcesContent":["export default {\n  servers: {\n    tcp: api => {\n      return {\n        // ---------------------------------------------------------------------\n        // Enable server?\n        // ---------------------------------------------------------------------\n        enable: process.env.ENABLE_TCP_SERVER !== undefined,\n\n        // ---------------------------------------------------------------------\n        // TCP or TLS?\n        // ---------------------------------------------------------------------\n        secure: false,\n\n        // ---------------------------------------------------------------------\n        // Server options\n        //\n        // passed to tls.createServer if secure=true, should contain SSL\n        // certificates.\n        // ---------------------------------------------------------------------\n        serverOptions: {},\n\n        // ---------------------------------------------------------------------\n        // Server port\n        // ---------------------------------------------------------------------\n        port: 5000,\n\n        // ---------------------------------------------------------------------\n        // IP to listen on\n        //\n        // Use 0.0.0.0 for all.\n        // ---------------------------------------------------------------------\n        bindIP: '0.0.0.0',\n\n        // ---------------------------------------------------------------------\n        // Enable TCP KeepAlive\n        //\n        // Send pings on each connection.\n        // ---------------------------------------------------------------------\n        setKeepAlive: false,\n\n        // ---------------------------------------------------------------------\n        // Delimiter string for incoming messages\n        // ---------------------------------------------------------------------\n        delimiter: '\\n',\n\n        // ---------------------------------------------------------------------\n        // Maximum incoming message string length in Bytes (use 0 for Infinity)\n        // ---------------------------------------------------------------------\n        maxDataLength: 0,\n\n        // ---------------------------------------------------------------------\n        // What message to send down to a client who request a `quit`\n        // ---------------------------------------------------------------------\n        goodbyeMessage: 'Bye!'\n      }\n    }\n  }\n}\n\nexport const test = {\n  servers: {\n    tcp: api => {\n      return {\n        enabled: true,\n        port: 5001,\n        secure: false\n      }\n    }\n  }\n}\n"],"sourceRoot":"/source/"}