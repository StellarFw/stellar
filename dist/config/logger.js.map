{"version":3,"sources":["config/logger.js"],"names":[],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;kBAEe;;AAEb,UAAQ,gBAAU,GAAV,EAAe;AACrB,QAAI,SAAS,EAAC,YAAY,EAAb,EAAb;;;AAGA,QAAI,kBAAQ,QAAZ,EAAsB;AACpB,aAAO,UAAP,CAAkB,IAAlB,CAAuB,UAAC,GAAD,EAAM,OAAN,EAAkB;AACvC,eAAO,IAAK,QAAQ,UAAR,CAAmB,OAAxB,CAAiC;AACtC,oBAAU,IAD4B;AAEtC,iBAAO,MAF+B;AAGtC,qBAAW;AAH2B,SAAjC,CAAP;AAKD,OAND;AAOD;;;AAGD,QAAI,eAAe,IAAI,MAAJ,CAAW,OAAX,CAAmB,KAAnB,CAAyB,GAA5C;;AAEA,QAAI;AACF,mBAAG,SAAH,CAAa,YAAb;AACD,KAFD,CAEE,OAAO,CAAP,EAAU;AACV,UAAI,EAAE,IAAF,KAAW,QAAf,EAAyB;AACvB,cAAM,IAAI,KAAJ,oCAA2C,YAA3C,CAAN;AACD;AACF;;AAED,WAAO,UAAP,CAAkB,IAAlB,CAAuB,UAAC,GAAD,EAAM,OAAN,EAAkB;AACvC,aAAO,IAAK,QAAQ,UAAR,CAAmB,IAAxB,CAA8B;AACnC,kBAAa,YAAb,SAA6B,IAAI,IAAJ,CAAS,KAAtC,SADmC;AAEnC,eAAO,MAF4B;AAGnC,mBAAW;AAHwB,OAA9B,CAAP;AAKD,KAND;;;AASA,WAAO,kBAAP,GAA4B,GAA5B;;AAEA,WAAO,MAAP;AACD;;AAvCY,C;AA2CR,IAAM,sBAAO;AAClB,UAAQ,qBAAO;AACb,WAAO;AACL,kBAAY;AADP,KAAP;AAGD;AALiB,CAAb","file":"config/logger.js","sourcesContent":["import fs from 'fs';\nimport cluster from 'cluster';\n\nexport default {\n\n  logger: function (api) {\n    let logger = {transports: []};\n\n    // check if this Stellar instance is the Master\n    if (cluster.isMaster) {\n      logger.transports.push((api, winston) => {\n        return new (winston.transports.Console)({\n          colorize: true,\n          level: 'info',\n          timestamp: true\n        });\n      })\n    }\n\n    // add a file logger\n    let logDirectory = api.config.general.paths.log;\n\n    try {\n      fs.mkdirSync(logDirectory);\n    } catch (e) {\n      if (e.code !== 'EEXIST') {\n        throw new Error(`Cannot create log directory @ ${logDirectory}`);\n      }\n    }\n\n    logger.transports.push((api, winston) => {\n      return new (winston.transports.File)({\n        filename: `${logDirectory}/${api.pids.title}.log`,\n        level: 'info',\n        timestamp: true\n      });\n    });\n\n    // define the maximum length of params to log (we will truncate)\n    logger.maxLogStringLength = 100;\n\n    return logger;\n  }\n\n}\n\nexport const test = {\n  logger: api => {\n    return {\n      transports: null\n    }\n  }\n}\n"],"sourceRoot":"/source/"}